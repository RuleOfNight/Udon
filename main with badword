import random
import discord
import asyncio
import datetime
import re 
from discord.ext import commands

TOKEN = '' #C·∫•t ph√≤ng khi bay token con bot

intents = discord.Intents.default()
intents.messages = True  # Enable the on_message event

client = commands.Bot(command_prefix='<', intents=intents)


@client.event
async def on_message(message):
    empty_array = []
    modmail_channel = discord.utils.get(client.get_all_channels(), name="‚åàüí¨‚åãchat-t√†o-lao")

    if message.author == client.user:
        return
    if str(message.channel.type) == "private":
        if message.attachments != empty_array:
            files = message.attachments
            await modmail_channel.send("From ["+ message.author.display_name + "]")

            for file in files:
                await modmail_channel.send(file.url)
        else:
            await modmail_channel.send(message.content)

    elif str(message.channel) == "‚åàüí¨‚åãchat-t√†o-lao" and message.content.startswith("<"):
        member_object = message.mentions[0]
        if message.attachments != empty_array:
            files = message.attachments
            await member_object.send("From ["+ message.author.display_name + "]")

            for file in files:
                await member_object.send(file.url)
        else:
            index = message.content.index(" ")
            string = message.content
            mod_message = string[index:]
            await member_object.send("From [" + message.author.display_name + "]" + mod_message)


client.run('OTExNTE1MjA5MTU4NDk2MjY3.YZigsA.Zwnf8m-MkPeYMha6cQj9i78VnFM')

bad_words = ["ch·ªã 7", "c·ªã 7", "chj 7"]

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    user_message = message.content.lower()

    for word in bad_words:
        if re.search(fr'\b{re.escape(word)}\b', user_message):
            muted_role = discord.utils.get(message.guild.roles, name="Muted")
            if muted_role:
                await message.channel.send(f"{message.author.mention}, your message contains a bad word. You are muted.")
                await message.author.add_roles(muted_role)

                # Schedule task to remove the muted role after 30 minutes
                await asyncio.sleep(1800)
                await message.author.remove_roles(muted_role)
                await message.channel.send(f"{message.author.mention}, your mute has been lifted after 30 minutes.")
                return


def time():
    Time=datetime.datetime.now().strftime("%I:%M:%p")



        

@client.event
async def on_ready():
    print(' {0.user} gi√°ng l√¢m'.format(client))

@client.event 
async def on_message(message):
    username = str(message.author).split('#')[0]
    user_message = str(message.content)
    channel = str(message.channel.name)
    Time = datetime.datetime.now().strftime("%I:%M:%p")
    print(f'{username}: {user_message} ({channel})')



    if message.channel.name == '‚ÅÖüí¨‚ÅÜchat-t√†o-lao':
        if user_message.lower() == 'k√©o':
            await message.channel.send(f'üî®')
            return
        if user_message.lower() == 'b√∫a':
            await message.channel.send(f'üóë')
            return
        if user_message.lower() == 'bao':
            await message.channel.send(f'‚úÇ')
            

       
    elif user_message.lower() == ',do ƒë·ªô ƒë·∫πp trai':
           response = f'ƒê·ªô ƒë·∫πp trai c·ªßa b·∫°n l√† {random.randrange(100)}/100 ƒëi·ªÉm'
           await message.channel.send(response)


    

client.run(TOKEN)


